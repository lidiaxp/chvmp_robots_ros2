<launch>
    <!-- Arguments -->
    <arg name="robot_name" default="/" description="Change this for namespacing."/>
    <arg name="base_frame" default="body" description="Link name of floating base. Do not touch this."/>
    <arg name="joints_map_file" default="$(find-pkg-share spot_config)/config/joints/joints.yaml" description="Path to list of joint names. Do not touch this."/>
    <arg name="links_map_file" default="$(find-pkg-share spot_config)/config/links/links.yaml" description="Path to list of link names. Do not touch this."/>
    <arg name="gait_config_file" default="$(find-pkg-share spot_config)/config/gait/gait.yaml" description="Path to gait parameters. Do not touch this."/>
    <arg name="description_file" default="$(find-pkg-share spot_description)/urdf/spot.urdf" description="Path to URDF file. Do not touch this."/>
    <arg name="gazebo" default="false" description="Set to true during simulation. This is auto-set to true from gazebo.launch."/>
    <arg name="rviz" default="false" description="Set to true to run rviz in parallel."/>
    <arg name="rviz_ref_frame" default="odom" description="Default RVIZ reference frame."/>
    <arg name="has_imu" default="true" description="Set to true if you want to visualize robot but there's no IMU. Only useful for microcontrollers."/>
    <arg name="lite" default="false" description="Set to true if you're using CHAMP lite version. Only useful for microcontrollers."/>
    <arg name="close_loop_odom" default="false" description="Set to true if you want to calculate odometry using close loop. This is auto-set to true from gazebo.launch."/>
    <arg name="publish_foot_contacts" default="true" description="Set to true if you want the controller to publish the foot contact states. This is auto-set to false from gazebo.launch."/>
    <arg name="publish_joint_control" default="true" description="Set to true if you want the controller to publish the joint_states topic. This is auto-set to false from gazebo.launch."/>
    <arg name="laser" default="sim" description="Set to the 2D LIDAR you're using."/>
    <arg name="joint_controller_topic" default="joint_group_position_controller/command" description="Change to remap command topic for actuator controller (ROS control)."/>
    <arg name="hardware_connected" default="false" description="Flag useful to launch hardware connected launch files. This auto disables publishing joint_states."/>

    <arg name="frame_prefix" if="$(eval robot_name == '/')" value=""/>
    <arg name="frame_prefix" unless="$(eval robot_name == '/')" value="$(var robot_name)/"/>

    <!-- Include Bringup Launch -->
    <include file="$(find-pkg-share champ_bringup)/launch/bringup.launch.py">
        <arg name="robot_name" value="$(var robot_name)"/>
        <arg name="base_frame" value="$(var base_frame)"/>
        <arg name="joints_map_file" value="$(var joints_map_file)"/>
        <arg name="links_map_file" value="$(var links_map_file)"/>
        <arg name="gait_config_file" value="$(var gait_config_file)"/>
        <arg name="description_file" value="$(var description_file)"/>
        <arg name="has_imu" value="$(var has_imu)"/>
        <arg name="gazebo" value="$(var gazebo)"/>
        <arg name="lite" value="$(var lite)"/>
        <arg name="laser" value="$(var laser)"/>
        <arg name="rviz" value="$(var rviz)"/>
        <arg name="rviz_ref_frame" value="$(var frame_prefix)$(var rviz_ref_frame)"/>
        <arg name="joint_controller_topic" value="$(var joint_controller_topic)"/>
        <arg name="hardware_connected" value="$(var hardware_connected)"/>
        <arg name="publish_foot_contacts" value="$(var publish_foot_contacts)"/>
        <arg name="publish_joint_control" value="$(var publish_joint_control)"/>
        <arg name="close_loop_odom" value="$(var close_loop_odom)"/>
    </include>

    <!-- Hardware Specific Group -->
    <group if="$(var hardware_connected)">
        <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_laser"
              args="0 0 0 0 0 0 $(var frame_prefix)body $(var frame_prefix)laser"/>
        <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_imu"
              args="0 0 0 0 0 0 $(var frame_prefix)body $(var frame_prefix)imu_link"/>
        <!-- Include your hardware launch file here -->
    </group>
</launch>